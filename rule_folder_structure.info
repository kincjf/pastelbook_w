# 폴더 구조 먼저 설명
# 기본 설정 ( 내가 기준으로 잡은 이유 )
# META-INF와 WEB-INF와 같은 필수 폴더를 제외하고 HONG WON GI가 네이밍한 폴더이름은 다음과 같은 기본 규칙을 가진다.
# 해당 폴더이름은 내용물이 어떤 내용( 파일의 내용및 파일의 종류 )인지 쉽게 파악 할 수 있어야 한다.
# 동일 폴더내의 파일은 같은 종류여야한다. 
# 폴더 추가의 기준은 ( 라이브러리를 제외 ),
	# 소스파일의 경우 파일이 한번에 숙지 불가능한 사이즈로 커지는 경우 ( 500~1000줄 이상 ) 
		ex) pb/pb_ui.js 파일이 2000줄이 된경우 ->
			pb/ui 폴더를 만든다. 해당 폴더의 자식파일로 다음과 같은 이름규칙으로 파일을 만든다.
				pb/ui/pb_ui_dialog.js
				pb/ui/pb_ui_menu.js
			menu, dialog 파일로 나누는 근거는 작업자의 판단에 따르며 해당 js파일 최상단에 파일 분할후 폴더구조 변경을 한 이유와 목적에 대해 적는다.
			첫번째 제작 파일은다른 js파일들과 같이 v0.0.1이 되며 어떤 파일로부터 분할되엇고 작업자가 누구인지 기입한다.
			나누는 근거가 불확실하고 단순 분량에 따른 분류일 경우, 협의에 의해 분할할하거나 임의 분할후 통보한다.
	#  리소스파일의 경우, 용도나 이용하는 페이지등에 의해 폴더로 따로 분류 할수 있으나 트리구조 형태로 의미상의 이해가 가능한 형태여야 한다.
		rsc/a.mp3 ......z. avi의 경우
		rsc/music
		rsc/movie/avi
		와 같이 나눌 수 있다.
	용도가  확실히 분리 되는 경우 폴더를 분할하는 것을 장려하며, 
		단순히 리소스 수가 많은 경우의 경우는 ( 동물그림, 식물사진 처럼 메타데이터로 분리 불가능 한 경우 )
			1. 서비스에서 증가될 수 있는 대용량이 될 가능성 있는 리소스 폴더의 경우 -> 자체적인 이름규칙으로 분리하며 폴더를 분할하지는 않는다.
				-> 변경시에 서로 협의한다.
			2. 서비스에 제공하는 자체제작 리소스로 제공되는 양의 제한이 있을 경우 
				-> 관리상의 분할이 필요한경우 해당 규칙을 만들어 분리한다.
			3. 서비스에서 리소스로 분리하는게 아니고, 페이지 ui,배너등에 사용되는 이미지의 경우
				-> 관리상 필요한 경우 분할한다. 해당 ui종류에 따라 분할하여 접근 하고 싶을 수 있으므로 기준을 잡아 분할한다.
		
./META-INF		-> context.xml관리하는 것, db쓰려고 추가
./WEB-INF		-> 이건 알거야 아마
./WEB-INF/classes	-> 톰캣 classpath
./WEB-INF/classes/com	
./WEB-INF/classes/com/pb	-> com.pb.db 우리회사고, 파스텔북패키지여
./WEB-INF/classes/com/pb/db	-> db만지려고
./WEB-INF/lib	-> maria db .jar 파일 추가
./admin			-> admin이라고 적었지만 실은 현재 db기능 체크하는 부분 jsp파일 관리하기 위해 ( 테스트용 폴더 )
./css			-> 파스텔북 0.0.1v 용 css, 손으로 짠것 파일 1개 있음
./dont_know_need		-> 이전 선호 작업분 mainview.html  이 참조하는 js, css 부분 다로 뽑아놓음, 근데 사용안하는 것 같아서 이름 이렇게 함
./dont_know_need/Backbone.js-Theater-master		-> 이것도 구버전 ( 몰라 )
./dont_know_need/audio							-> 이것도 구버전 -> 소리 부분 추가 할 때, 선호가 만져본 부분이니까 추가 할 거 같아서 남겨놓음
./dont_know_need/etc							-> 이것도 구버전 ( 마찬가지 )
./dont_know_need/roncioso-Flip-jQuery-5f5d9a4	-> 이것도 구버전
./img									-> 이미지 ( 이전 mainview.html ) 작업시 사용한 이미지 인듯 ( 홍보용 페이지 제작중 움직이는 gif포함 )
./img/content								-> 선호가 외주 줘서 맡긴 파일들 ( 서비스 제공용 파일이기때문에 폴더로 따로 빠져잇는 듯 ( 이상하게 gif,png가 혼재 )
./img/dummy	
./img/icon								-> icon ( content폴더 파일 리스트 보여줄 때, 작은 사이즈 이미지 필요해서 썸네일 뜬듯, ( thumbnail로 변경 필요하다고 봄 - 나중에 )
./js										-> 모든 동작하는 자바스크립트 파일은 여기에
./js/custom								-> mainview 작업시 선호가 사용하던 파일중 직접 작엄한 부분
./js/external								-> mainview 작업시 선호가 사용하던 js, css 파일중 외부 라이브러리 혹은 가져온 파일들
./js/lib							-> 파스텔북 0.0.1v 용 외부 라이브러리 저장폴더 모든 외부라이브러리는 실은 여기에 두고 싶다
									( 관리상 편리를 위해 ! -> 위의 custom, external은 실은 여기로 옮겨져야 하지만 
									mainview 참고 할경우를 생각해서 딱히 변경 없이 그대로 둔것, jquery mobile등 이후 손 안댈 부분은 아예 없애는 것도 좋을 듯 )
./js/lib/jquery_ui					-> 외부 라이브러리중 jquery ui  모든 라이브러리 폴더 명은 언더바로 구분한다, 백본에 만약 ui가 있다면 backbone_ui로 나타내는식 ( 단 파일명은 안손댄다 )
									이 언더바로 구분된 라이브러리 폴더명은 이후 requirejs.config 의  모듈명과 동일하게 유지한다.
./js/lib/jquery_ui/images			-> jquery ui가 쓰는 이미지들 ( 외곽 테두리라던지 아이콘이라던지 ..)
./js/pb							-> 실제 파스텔북 프로젝트 폴더( 우리가 제작한 js파일들 ) , 우리가 제작한 css도 옮겨야 하나 고민은 되지만 폴더가 js라 안옮겼음
./js/pb/ui							-> 파스텔북 내용중 ui폴더가 관리상 구분이 필요하다고 생각하여 ui라고 만듬,
									pb.ui 하는 식의 네임스페이스와 pb_ui 하는 식의 js 파일 네이밍을 맞추려고 하고 있음
									pb.ui.dlg_a, pb.ui.dlg_b ...... _z 식으로 1개 네임스페이스 1개 파일 내의 분량이 쉽게 숙지할 수 없는정도 500~1000라인을 넘어갈때
									pb폴더 안에 ui폴더를 만들고 pb_ui_a.js, pb_ui_b.js 와 같이 파일을 분류하는 방식으로 작업한다. 지금까지도 이렇게 해왔고..
									우리가 추가하는 기능인데 ( 다른 라이브러리 참조하는지는 고려하지말고 ) 
									전역적으로 관리한다 근데 그게 입출력용도의 기능이다
									pb/pb_io.js 파일을 만들어 관리한다
									만약 pb/pb_io.js파일이 커진다?
									pb/io/pb_io_input.js
									pb/io/pb_io_output.js 와 같이 관리한다
									폴더 패스에서 패키징을 했는데 pb_io_output과 같이 나타내는 이유는 해당 js파일이름만 보고도 파스텔북(우리가짠 js)이고 i/o 담당인데 output이 분량이 많아져서 변경하였다라는 것을 숙지 할 수 있게 하는 것이 제 1목표.
									2목표는 requirejs의 main js파일로 사용하는 pastelbook.js파일의 모듈명과 같게 하려는 목적이 있다.

./json							-> icon list ( 사용자에게 제공할 추가 가능한 그림오브젝트 목록을 나타내는 json객체를 담고있다. 그외 다른 json은 없음 ) 
									-> 데이터는 db로 이동하였고, 이것 역시 이름 변경이 필요하다( 썸네일로 ) , 아직  db -> json기능은 만들지 않았음, 안뜨는 이미지가 몇개있음
./settings						-> 웹앱 프로젝트안에서 관리하는게 아닌 서버설정상의 내용이나 이런 부분을 따로 저장하기 위해 만든 폴더이다. 실제 웹앱동작에는 필요하지는 안힞만
									-> 정상적으로 서버구동을 하기위해서 설정한 부분으로 서버이전등의 작업을 한다고 치면 필히 필요한 부분이다.
									-> 현재 mysql서버 구동 설정인 /etc/my.cnf 파일을 etc_my.cnf와 같이 이름을 바꿔 복사해놓았다. ( 한글 설정을 위한 부분 )
									-> 이후 다른 서버구동 관련 설정 부분도 여기에 추가한다 usr_share_tomcat_conf_conf 든 tomcat_conf_server.xml이던, 작업자가 납득할 수 잇는 알려진 방식의 디렉토리 부터 이름을 지으면 되겠다. ( 본 규칙은 파일내에 _ (언더스코어)가 등장하지 않는다고 가정하였으나 언더스코어가 있는 경우
									알아서 대처하길바람
./sql								->	DB의 스키마 DDL이나 파스텔북에서만 사용하는 db내 데이터 백업본을 저장하려는 목적의 폴더이다. 백업이나 서버이전시
									DB를 잊고 웹앱폴더만 복사했을때의 절망감을 줄이거나, 서버이전시의 빠른 전송을 위한 목적이다.
									주간 혹은 월간 점검 작업을 통해서 모든 DB스키마, 혹은 모든 더미데이터가 백업되었는지 확인 해보는 것이 필요하다. ( 정책 설정 필요 )
									이 폴더로 자동으로 db백업이 이루어지도록 백업정책을 세워놓는 것도 좋다.
									json/icon_list.json 파일을 mysql database에 insert할때 사용한 insert 구문 파일이다 70여개의 row가 인서트 된다.
									-> 이
